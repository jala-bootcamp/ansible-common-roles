---
- name: Add Docker GPG apt Key
  apt_key:
    url: "{{ UBUNTU_DOCKER_GPG_KEY_URL }}"
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb "{{ UBUNTU_DOCKER_REPO }}" "{{ UBUNTU_VERSION_CODE_NAME }}" stable
    state: present

- name: Make sure Docker engine is installed
  apt:
    pkg:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    update_cache: true
    state: latest

- name: Install PIP packages
  pip:
    name:
      - docker
      - docker-compose

- name: Make sure Ubuntu user has proper access to docker group
  ansible.builtin.user:
    name: ubuntu
    shell: /bin/bash
    groups: docker
    append: true
  tags:
    - ubuntu_docker_group

- name: Create storage directory
  ansible.builtin.file:
    path: "{{ UBUNTU_STORAGE_PATH }}"
    state: directory
    mode: '0755'
  tags:
    - setup_disk_storage

- name: Create a ext4 filesystem on "{{ UBUNTU_STORAGE_BLOCK }}" and check disk
  community.general.filesystem:
    fstype: ext4
    dev: "{{ UBUNTU_STORAGE_BLOCK }}"
    # opts: -cc
  tags:
    - setup_disk_storage

- name: Mount storage directory
  become: true
  ansible.posix.mount:
    path: "{{ UBUNTU_STORAGE_PATH }}"
    src: "{{ UBUNTU_STORAGE_BLOCK }}"
    fstype: ext4
    opts: defaults
    state: present
  tags:
    - setup_disk_storage

- name: Create a directory to move docker
  become: true
  ansible.builtin.file:
    path: "{{ UBUNTU_DOCKER_NEW_PATH }}"
    state: directory
    mode: '0755'
  tags:
    - docker_storage

- name: Stop service docker, if started
  become: true
  ansible.builtin.service:
    name: docker
    state: stopped
  tags:
    - docker_storage
    - sync_docker_files

- name: Stop service docker.socket, if started
  become: true
  ansible.builtin.service:
    name: docker.socket
    state: stopped
  tags:
    - docker_storage
    - sync_docker_files

- name: Copy all docker files from previous location
  become: true
  ansible.posix.synchronize:
    src: /var/lib/docker/
    dest: "{{ UBUNTU_DOCKER_NEW_PATH }}"
    compress: false
  delegate_to: "{{ inventory_hostname }}"
  tags:
    - docker_storage
    - sync_docker_files

- name: Copy docker daemon config path file template
  become: true
  template:
    src: templates/daemon.json.j2
    dest: /etc/docker/daemon.json
    owner: root
    group: root
  tags:
    - docker_storage
    - sync_docker_files

- name: Re-start docker service, if stopped
  become: true
  ansible.builtin.service:
    name: docker
    state: started
  tags:
    - docker_storage
    - sync_docker_files
